include "Exception.rpc"

struct Meta
{
	1:i64 size;
	2:i64 creationTime;
	3:i64 modificationTime;
}

enum RepositoryChange
{
    Undefined = 0,
    EntryAdded = 1,
    EntryRemoved = 2
}

service Repository
{
	i64         Open(1:string repositoryName)                               throws (1:Exception.InvalidArgument err, 2:Exception.UnexpectedError err);
    binary      GetEntry(1:i64 instance, 2:string name)                     throws (1:Exception.InvalidArgument err, 2:Exception.InvalidOperation err, 3:Exception.UnexpectedError err);
    Meta        GetEntryMeta(1:i64 instance, 2:string name)                 throws (1:Exception.InvalidArgument err, 2:Exception.InvalidOperation err, 3:Exception.UnexpectedError err);
    bool        HasEntry(1:i64 instance, 2:string name)                     throws (1:Exception.InvalidArgument err, 2:Exception.InvalidOperation err, 3:Exception.UnexpectedError err);
    void        AddEntry(1:i64 instance, 2:string name, 3:binary data)      throws (1:Exception.InvalidArgument err, 2:Exception.InvalidOperation err, 3:Exception.UnexpectedError err);
    void        RemoveEntry(1:i64 instance, 2:string name)                  throws (1:Exception.InvalidArgument err, 2:Exception.InvalidOperation err, 3:Exception.UnexpectedError err);
    void        Close(1:i64 instance)                                       throws (1:Exception.InvalidArgument err, 2:Exception.UnexpectedError err);
    
    [[callback]] void OnRepositoryChanged(1:i64 instance, 2:RepositoryChange change, 3:string name);
}
