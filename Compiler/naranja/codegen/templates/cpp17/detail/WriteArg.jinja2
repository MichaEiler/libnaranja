{%- if isPrimitive(arg) -%}
{# case for primitives like bool, i64 but also binary and string (meaning built-ins) #}
{{ writerName }}->WriteValue("{{ argName }}", {{ argName }});
{%- elif isListType(arg) -%}
{# case for lists #}
{
    {% set listWriterUnique = "writer_" + randStr() -%}

    auto {{ listWriterUnique }} = {{ writerName }}->WriteList("{{ argName }}", {{ argName }}.size());
    for (std::size_t i = 0; i < {{ argName }}.size(); ++i)
    {
        {{ include("detail/WriteArg.jinja2", documentName=documentName, writerName=listWriterUnique, arg=arg.valueType, argName = argName + "[i]") }}    
    }
}
{%- elif isEnum(documentName, arg) -%}
{# case for enumerations #}
{{ writerName }}->WriteEnum("{{ argName }}", {{ argName }});
{%- else -%}
{# case for structures #}
{
    {% set objectWriterUnique = "writer_" + randStr() -%}
    auto {{ objectWriterUnique }} = {{ writerName }}->WriteObject("{{ argName }}");
    {%- for argMember in getStructureArgs(documentName, arg) -%}
    {{ include("detail/WriteArg.jinja2", documentName=documentName, writerName=objectWriterUnique, arg=argMember.valueType, argName = argName + "." + argMember.name) }}
    {%- endfor %}
}
{%- endif %}
